name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.22', '1.23']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
    
    - name: Run go vet
      run: go vet ./...
    
    - name: Check formatting
      run: |
        fmt_files=$(gofmt -l .)
        if [ -n "$fmt_files" ]; then
          echo "The following files need formatting:"
          echo "$fmt_files"
          exit 1
        fi

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    
    - name: Build
      run: go build -v ./cmd/vaultenv-cli
    
    - name: Build for multiple platforms
      run: |
        GOOS=linux GOARCH=amd64 go build -o vaultenv-linux-amd64 ./cmd/vaultenv-cli
        GOOS=darwin GOARCH=amd64 go build -o vaultenv-darwin-amd64 ./cmd/vaultenv-cli
        GOOS=windows GOARCH=amd64 go build -o vaultenv-windows-amd64.exe ./cmd/vaultenv-cli